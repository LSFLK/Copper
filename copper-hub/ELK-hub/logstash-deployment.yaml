apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-configmap
  namespace: copperhub
data:
  logstash.yml: |
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
  logstash.conf: |
    # all input will come from filebeat, no local logs
    input {
      beats {
        port => 5044
        #type => "EmailServer"   # You can define a type however default is log
      }
    }
      # bellow input can establish the connection but cant publish events
      # ERROR	logstash/async.go:256	Failed to publish events caused by: read tcp 10.1.9.191:55742->10.111.159.152:5044: i/o timeout
      #tcp {
      #  port => 5044
        #codec => json
      #}
    # input taken from postfix log files just for testing
    #input {
    #  file {
    #    path => "/var/log/maillog"
    #    type => "postfix"   # You can define a type however you like.
    #  }
    #}


    #filter {
    #  if [message] =~ /^\{.*\}$/ {
    #    json {
    #      source => "message"
    #    }
    #  }
    #  if [ClientHost] {
    #    geoip {
    #      source => "ClientHost"
    #    }
    #  }
    #}
    
    #filter {
    #  if [type] == "log" {
    #  if [message] =~ /^\{.*\}$/ {
    #      type => "EmailServer" 
    #  }
    #}  

    #filter {
    #  if [type] == "syslog" {
    #    grok {
    #      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} \
    #      %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
    #      add_field => [ "received_at", "%{@timestamp}" ]
    #      add_field => [ "received_from", "%{host}" ]
    
    #      }
    #      syslog_pri { }
    #      date {
    #        match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    #      }
    #  }
    #}  

    output {
        elasticsearch {
            #hosts => [ "elasticsearch-logging:9200" ]
            hosts => [ "elasticsearch:9200" ]
        }
    }
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: logstash
  namespace: copperhub
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash
        #image: docker.elastic.co/logstash/logstash:6.3.0
        image: docker.elastic.co/logstash/logstash:6.7.1
        ports:
        - containerPort: 5044
        volumeMounts:
          - name: config-volume
            mountPath: /usr/share/logstash/config
          - name: logstash-pipeline-volume
            mountPath: /usr/share/logstash/pipeline
      volumes:
      - name: config-volume
        configMap:
          name: logstash-configmap
          items:
            - key: logstash.yml
              path: logstash.yml
      - name: logstash-pipeline-volume
        configMap:
          name: logstash-configmap
          items:
            - key: logstash.conf
              path: logstash.conf
---
kind: Service
apiVersion: v1
metadata:
  name: logstash
  namespace: copperhub
spec:
  selector:
    app: logstash
  ports:
  - protocol: TCP
    port: 5044
    targetPort: 5044
    nodePort: 31336 # this should be removed when we are not useing nodeport
  #type: ClusterIP
  type: NodePort # allowing access from localhost machine from nodeport
