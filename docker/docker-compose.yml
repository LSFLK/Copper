version: '2'
#--------------------------------------------------------------------------------------------
#networks:
    
        #front:
            #external:
              #name: front
        #back:
            #driver: bridge

#--------------------------------------------------------------------------------------------

# https://runnable.com/docker/docker-compose-networking

networks:
    front:
        external:
            name: front
        # use the bridge driver, but enable IPv6
        #driver: bridge
        #driver_opts:
            #com.docker.network.enable_ipv6: "true"
        #ipam:
            #driver: default
            #config:
             #- subnet: "192.168.0.0/24"
               #gateway: "192.168.0.1"
                #- subnet: "2001:3984:3989::/64"
                #gateway: "2001:3984:3989::1"
    back:
        # use a custom driver, with no options
        driver: bridge
        ipam:
            config:
             - subnet: "172.19.0.0/24"
               gateway: "172.19.0.18"

services:

#-------------------------------------myReverseProxy-----------------------------------------

    reverseproxy:
        #image: reverseproxy:latest
        build:
            context: .
            dockerfile: ./reverseproxy/Dockerfile
        ports:
            #- 80:80 # becouse when we allocate this port emailserver cant connect to online
            - 88:88
        restart: always

        #test:
        #image: webmail/webmail:latest
        
        networks:           
            back:
               ipv4_address: 172.19.0.20
            front:


        #networks:
            #- front
            #- back
             
        container_name: "reverseproxy"

#--------------------------------------nginx--------------------------------------------------
    #reverse-proxy:
        #image: jwilder/nginx-proxy
        
        #ports:
            #- 86:86
            #- 443:443
        #volumes:
            #- /var/run/docker.sock:/tmp/docker.sock:ro
            #- ./emailserver/ssl/archive/${FQDN}:/etc/nginx/certs:ro
        
        #networks:
            #- front
            #- back
        #container_name: "reverse-proxy"
#-------------------------------------mariadb----------------------------------------------------
    mariadb:
        #extends:
            #file: docker-common.yml
            #service: mariadb
        image: mariadb:10.2
        #build:
            #context: .
            #dockerfile: ./database/Dockerfile
        container_name: mariadb
        restart: unless-stopped
        #environment:
          #- MYSQL_DATABASE=postfix
          #- MYSQL_DATABASE=${DB}
          #- MYSQL_USER=${DBUSER}
          #- MYSQL_PASSWORD=${DBPASS}
        volumes:
          - ./database/data:/var/lib/mysql
          # following volume is added ot copy some scripts to add domains and users by queries at startup
          - ./database/scripts/mariadb-scripts:/var/lib/
 
        environment:
            #- MYSQL_RANDOM_ROOT_PASSWORD=yes
            #- MYSQL_DATABASE=postfix
            #- MYSQL_DATABASE=mail
            - MYSQL_DATABASE=${DB}
            - MYSQL_USER=${DBUSER}
            - MYSQL_PASSWORD=${DBPASS}
            - HOSTNAME=${DBHOST}
            - VIRTUAL_HOST=mariadb
        expose:
            - "3306"
        volumes:
            #- ./docker/postgres/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
            #- ./database/scripts/mariadb-scripts:/docker-entrypoint-initdb.d/init-user-db.sh
            - ./database/scripts/mysql:/docker-entrypoint-initdb.d/init-user-db.sh
        networks:           
            back:
               ipv4_address: 172.19.0.19
        
        #depends_on:
            #- front
        #container_name: "mariadb"
        
#-----------------------------------email server------------------------------------------------------
    emailserver:
        #extends:
            #file: docker-common.yml
            #service: emailserver
        build:
            context: .
            dockerfile: ./emailserver/Dockerfile
        hostname: ${FQDN}
        #hostname: mail.example.com
        #volumes:
          #- ./emailserver/certs:/certs
          #- ./emailserver/ssl:/etc/letsencrypt/
          #- ./emailserver/mail:/var/mail
        extra_hosts:
            - "coppermail.emailserver:127.0.1.1"
            - "coppermail.emailserver.tld:127.0.1.1"
      
        environment:
            - VIRTUAL_HOST=${FQDN},rspamd.${DOMAIN}
            - VIRTUAL_PORT=80
            - HOSTNAME=${FQDN}
            - DOMAIN=${DOMAIN}
            - EMAIL=${EMAIL}
            - DBUSER=${DBUSER}
            - DBHOST=${DBHOST}
            - DBPASS=${DBPASS}
            - DEBUG=${DEBUG}
            - RSPAMD_PASSWORD=${RSPAMD_PASSWORD}
        ports:
            # bellow 80 port is opened for external use
            - "80"
            - "11334:11334" # RSPAMD web portal
            - "25:25"       # SMTP                - opened from external 25 to local 25
            - "110:110"     # POP3
            - "143:143"     # IMAP
            - "465:465"     # SMTPS
            - "587:587"     # Submission
            - "993:993"     # IMAPS
            - "995:995"     # POP3S
            #- "10026:10026" # smtpd  // this was added by me due to a port open erro in msterfile config
            - "4190:4190"   # SIEVE
        entrypoint:
            - /bin/init_sys.sh
        depends_on:
            - mariadb
            - redis
        # two networks are allocated and one with static ip. this format is important    
        networks:           
            back:
               ipv4_address: 172.19.0.17
            front:
        
        
        container_name: "emailserver"
#-----------------------------------------postfixadmin-------------------------------------
    postfixadmin:
        #extends:
            #file: docker-common.yml
            #service: postfixadmin
        build:
            context: .
            dockerfile: ./postfixadmin/Dockerfile
        hostname: postfixadmin.${DOMAIN}
        #hostname: postfixadmin.example.com
     
        environment:
            - VIRTUAL_HOST=postfixadmin.${DOMAIN}
            - VIRTUAL_PORT=80
            - HOSTNAME=postfixadmin.${DOMAIN}
            - DOMAIN=${DOMAIN}
            - FQDN=${FQDN}
            - EMAIL=${EMAIL}
            - DBUSER=${DBUSER}
            - DBPASS=${DBPASS}
        entrypoint:
            - /bin/init_sys.sh
        ports:
            # from external 88 opened to local 88
            - "8080:8080"
            #- "8080"
        depends_on:
            - mariadb
            - emailserver
           
        expose:
            - "8080"

        networks:
            #- front
            back:
              ipv4_address: 172.19.0.15
        
        container_name: "postfixadmin"

# ----------------------------------------webmail--------------------------------------------
  
    webmail:
        build:
            context: .
            dockerfile: ./webmail/${WEBMAIL}/Dockerfile
        restart: always
        env_file: .env
        volumes:
            - ./webmail/${WEBMAIL}/app:/var/www/site/app/
        ports:
            - "8989:80"
        environment:
            - WEBMAIL=${WEBMAIL}
         
        depends_on:
            - emailserver
        networks:
            #- front
            back:
              ipv4_address: 172.19.0.16
        container_name: "webmail"   

            #-------------------------------------copperclient -- customized web mail client installation----
    #webmail:
        #build:
            #context: .
            #dockerfile: ./webmail/copperclient/Dockerfile
        #restart: always
        #env_file: .env
        #volumes:
            #- ./webmail/copperclient/app:/var/www/site/app/
        #ports:

            #- "8989:80"
        #depends_on:
            #- emailserver
        #networks:
            #- front
            #- back
        #container_name: "webmail" 



#------------------------------------------radis----------------------------------------------
    redis:
        #extends:
            #file: docker-common.yml
            #service: redis
        image: redis:4.0-alpine
        container_name: redis
        restart: unless-stopped
        command: redis-server --appendonly yes
        volumes:
          - ./redis/data:/data
       
        environment:
            - VIRTUAL_HOST=redis
        expose:
            - "6379"
        networks:
            #- back
            back:
              ipv4_address: 172.19.0.18
        #depends_on:
            #- front

        #container_name: "redis"
    
# ----------------------------------------openLDAP---------------------------------------------------

    #ldap:
        #build:
           #context: .
           ##dockerfile: ./openLDAP/Dockerfile
           #dockerfile: ./ldap/Dockerfile
        #restart: always
        ##restart: unless-stopped
        ##command: sh /etc/openldap/init_ldap.sh
        ##env_file: .env
        #hostname: ldap01.${DOMAIN}
        #extra_hosts:
            #- "ldap.coppermail.dyndns.org ldap:127.0.1.1"
            ##- "localhost:127.0.0.1"
        ##volumes:
            ##- ./ldap/configs/ldif/:/etc/openldap/ldif/
            ##- ./ldap/configs/ldap/:/etc/ldap/
            ##- ./ldap/configs/slapd:/usr/share/slapd/
        #ports:
            #- "389:389"
            #- "636:636"
            #- "8888:80"
        #environment:
            #- DOMAIN=${DOMAIN}
            #- DEBUG=${DEBUG}
            #- EMAIL=${EMAIL}
        #entrypoint:
            #- /etc/openldap/init_ldap.sh
        #depends_on:
            #- emailserver
        #networks:
            #- front
            #back:
              #ipv4_address: 172.19.0.21
        #container_name: "ldap" 

    # -----------------------------------new open ldap -------------------------------------------

    openldap:
    #image: osixia/openldap:1.2.1
        build:
         context: .
         dockerfile: ./openldap/Dockerfile
        container_name: openldap
        environment:
            - DOMAIN=${DOMAIN}
            - LDAP_LOG_LEVEL=${LDAP_LOG_LEVEL}
            - LDAP_ORGANISATION=${LDAP_ORGANISATION}
            - LDAP_DOMAIN=${DOMAIN}
            - LDAP_BASE_DN=${LDAP_BASE_DN}
            - LDAP_ADMIN_PASSWORD=${LDAP_ADMIN_PASSWORD}
            - LDAP_CONFIG_PASSWORD=${LDAP_CONFIG_PASSWORD}
            - LDAP_READONLY_USER=${LDAP_READONLY_USER}
             #LDAP_READONLY_USER_USERNAME: "readonly"
             #LDAP_READONLY_USER_PASSWORD: "readonly"
            - LDAP_RFC2307BIS_SCHEMA=${LDAP_RFC2307BIS_SCHEMA}
            - LDAP_BACKEND=${LDAP_BACKEND}
            - LDAP_TLS=${LDAP_TLS}
            - LDAP_TLS_CRT_FILENAME=${LDAP_TLS_CRT_FILENAME}
            - LDAP_TLS_KEY_FILENAME=${LDAP_TLS_KEY_FILENAME}
            - LDAP_TLS_CA_CRT_FILENAME=${LDAP_TLS_CA_CRT_FILENAME}
            - LDAP_TLS_ENFORCE=${LDAP_TLS_ENFORCE}
            - LDAP_TLS_CIPHER_SUITE=${LDAP_TLS_CIPHER_SUITE}
            - LDAP_TLS_PROTOCOL_MIN=${LDAP_TLS_PROTOCOL_MIN}
            - LDAP_TLS_VERIFY_CLIENT=${LDAP_TLS_VERIFY_CLIENT}
            - LDAP_REPLICATION=${LDAP_REPLICATION}
             #LDAP_REPLICATION_CONFIG_SYNCPROV: "binddn="cn=admin,cn=config" bindmethod=simple credentials=$LDAP_CONFIG_PASSWORD searchbase="cn=config" type=refreshAndPersist retry="60 +" timeout=1 starttls=critical"
             #LDAP_REPLICATION_DB_SYNCPROV: "binddn="cn=admin,$LDAP_BASE_DN" bindmethod=simple credentials=$LDAP_ADMIN_PASSWORD searchbase="$LDAP_BASE_DN" type=refreshAndPersist interval=00:00:00:10 retry="60 +" timeout=1 starttls=critical"
             #LDAP_REPLICATION_HOSTS: "#PYTHON2BASH:['ldap://ldap.example.org','ldap://ldap2.example.org']"
            - KEEP_EXISTING_CONFIG=${KEEP_EXISTING_CONFIG}
            - LDAP_REMOVE_CONFIG_AFTER_SETUP=${LDAP_REMOVE_CONFIG_AFTER_SETUP}
            - LDAP_SSL_HELPER_PREFIX=${LDAP_SSL_HELPER_PREFIX}
        tty: true
        stdin_open: true
        volumes:
             - /var/lib/ldap
             - /etc/ldap/slapd.d
             - /container/service/slapd/assets/certs/
        ports:
            - "389:389"
            - "636:636"
        domainname: "coppermail.dyndns.org" # important: same as hostname
        hostname: "ldap.coppermail.dyndns.org"
        networks:
            #- front
            back:
              ipv4_address: 172.19.0.22
  
  #---------------------------------phpldapadmin-------------------------------------------
  
    phpldapadmin:
        image: osixia/phpldapadmin:latest
        container_name: phpldapadmin
        environment:
             PHPLDAPADMIN_LDAP_HOSTS: "openldap"
             PHPLDAPADMIN_HTTPS: "false"
        ports:
            - "8888:80"
        depends_on:
            - openldap
        networks:
            #- front
            back:
              ipv4_address: 172.19.0.21




    #-------------------------------------END------------------------------------------------------    